[tool.poetry]
name = "synthetic-ai"
version = "0.1.0"
description = "Synthetic A.I."
authors = ["Gianmarco <janmail1990@gmail.com>"]
license = "LICENSE"
readme = "README.md"
packages = [{ include = "sai", from = "src" }]

[build-system]
requires = ["poetry-core>=1.0.0", "cython"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
# Python versions
python = ">=3.10,<3.11"
# Utils
pyrootutils = "*"
loguru = "*"
plac = "^1.3.5"
ipykernel = "*"
jupyter = "*"
jupyter-contrib-nbextensions = "*"
ipywidgets = "*"
wget = "^3.2"
# ML
numpy = "*"
catboost = "^1.2"
category-encoders = "^2.6.2"
shap = "^0.42.1"
# Deep Learning
lightning = "^2.0.0"
lightning-bolts = "*"
lightning-transformers = "^0.2.5"
torch = [
    { version = "*", source = "pytorch", platform = "linux" },
    { version = "^2.0.0", source = "pypi", platform = "darwin" },
]
torchaudio = [
    { version = "^2.1.0", source = "pytorch", platform = "linux" },
    { version = "^2.1.0", source = "pypi", platform = "darwin" },
]
lion-pytorch = "^0.1.2"
torch-geometric = "^2.3.1"
pytorch-forecasting = { version = "^1.0.0", extras = ["mqf2"] }
opacus = "^1.4.0"
# ML tracking
tensorboard = "^2.14.0"
tensorboardx = "^2.6.2.2"
mlflow = "^2.6.0"
ydata-profiling = "^4.5.1"
dvc = "*"
dvclive = "*"
rich = "^13.5.2"
# Configs
hydra-core = "*"
# UI
gradio = "^3.45.2"
# Music/Audio
datasets = { extras = ["audio"], version = "^2.14.5" }
yt-dlp = "^2023.9.24"
sounddevice = "^0.4.6"
x-clip = "^0.14.1"
fsspec = "<2023.10.0"

[tool.poetry.dev-dependencies]
cython = "^3.0.2"
setuptools = "*"
setuptools_rust = "*"
black = { version = "*", extras = ["jupyter"] }
ipython = "*"
isort = "*"
mypy = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-pylint = "*"
pytest-mypy = "*"
pytest-testmon = "*"
pytest-xdist = "*"
virtualenv = "*"
nbmake = "*"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.black]
line-length = 110

[tool.mypy]
exclude = ["tests/conftest.py"]
warn_return_any = true
warn_unused_configs = true
mypy_path = ["src"]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
no_implicit_optional = false

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = ["tests/res"]
testpaths = ["tests"]
log_cli = true
addopts = "-x --pylint --disable-pytest-warnings --cov=src/ --durations=5"
